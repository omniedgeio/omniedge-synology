#!/bin/bash

PACKAGE_NAME="omniedge"
PACKAGE_BIN="${SYNOPKG_PKGDEST}/bin/omniedge"
PID_FILE="${SYNOPKG_PKGDEST}/logs/omniedge.pid"
LOG_FILE="${SYNOPKG_PKGDEST}/logs/omniedge.log"
DIALOG_FILE="${SYNOPKG_PKGDEST}/var/dialog"

NETWORK_ID=`synogetkeyvalue "${DIALOG_FILE}" NETWORK_ID`
SECURITY_KEY=`synogetkeyvalue "${DIALOG_FILE}" SECURITY_KEY`

if [ -f "${DIALOG_FILE}" ]; then
    . ${DIALOG_FILE}
fi

start() {
  echo "=== Starting ${PACKAGE_NAME} with: login" >>${LOG_FILE}
  ${PACKAGE_BIN} login -s ${SECURITY_KEY} -f ${SYNOPKG_PKGDEST}/var/auth.json >>${LOG_FILE} 2>&1

  echo "=== Starting ${PACKAGE_NAME} with: join" >>${LOG_FILE}
  ${PACKAGE_BIN} join -n ${NETWORK_ID} -f ${SYNOPKG_PKGDEST}/var/auth.json >>${LOG_FILE} 2>&1 &
  if [ -n "${PID_FILE}" ]; then
    echo "$!" >"${PID_FILE}"
  fi
}

stop() {
  if [ -n "${PID_FILE}" -a -r "${PID_FILE}" ]; then
    local PID=$(cat "${PID_FILE}")
    echo "=== Stopping ${PACKAGE_NAME} service PID=${PID}" >>${LOG_FILE}
    kill -TERM $PID >>${LOG_FILE} 2>&1
    if [ -f "${PID_FILE}" ]; then
      rm -f "${PID_FILE}" >/dev/null
    fi
  fi
}

tun_created() {
    if ([ ! -c /dev/net/tun ]); then
        if ([ ! -d /dev/net ]); then
            mkdir -m 755 /dev/net
        fi
        mknod /dev/net/tun c 10 200
        chmod 0755 /dev/net/tun
    fi

    if (!(lsmod | grep -q "^tun\s")); then
        insmod /lib/modules/tun.ko
    fi
}

status() {
  if [ -n "${PID_FILE}" -a -r "${PID_FILE}" ]; then
    local PID=$(cat "${PID_FILE}")
    if kill -0 $PID >/dev/null 2>&1; then
      return
    fi
    rm -f "${PID_FILE}" >/dev/null
  fi
  return 1
}

case $1 in
start)
  if status; then
    echo "${PACKAGE_NAME} is already running"
    exit 0
  else
    echo "Starting ${PACKAGE_NAME} ..."
    tun_created
    start
    exit $?
  fi
  ;;
stop)
  if status; then
    echo "Stopping ${PACKAGE_NAME} ..."
    stop
    exit $?
  else
    echo "${PACKAGE_NAME} is not running"
    exit 0
  fi
  ;;
status)
  if status; then
    echo "${PACKAGE_NAME} is running"
    exit 0
  else
    echo "${PACKAGE_NAME} is not running"
    exit 3
  fi
  ;;
*)
  echo "command $1 is not implemented"
  exit 0
  ;;
esac
